#!/bin/sh

primary_box='malcha'
user_name='alexanderm'

_scratch=0
_home=0
_opt_box=0

_box=${_box:-${primary_box}}

_timestamp=$(date +%F-%H%M%S)

check_input() {
	[ "${_scratch}" -eq 1 ] && [ "${_home}" -eq 1 ] \
		&& printf "%s\n\n" "Decide between scratch and home." \
		&& usage
}

build_remote() {
	_address="${user_name}@${_box}.physik.fu-berlin.de"
	if [ "${_scratch}" -eq 1 ] ; then
		_remote_basedir="${_address}:/local_scratch/${user_name}"
	elif [ "${_home}" -eq 1 ] ; then
		_remote_basedir="${_address}:/home/${user_name}"
	else
		_remote_basedir="${_address}:"
	fi
}

fetch_data() {
	if hostname --fqdn | grep 'physik.fu-berlin.de' ; then
		# within uni network
		if [ "${_opt_box}" -eq 0 ] ; then
			printf "%s\n\n" "Specify hostname of source."
			usage
		else
			build_remote
		fi
	else
		# remotely
		build_remote
	fi
	
	if [ -n "$2" ] ; then
		_source="${_remote_basedir}/$2"
	else
		printf "%s\n\n" "Provide a source directory."
		usage
	fi

	if [ -n "$3" ] ; then
		_destination="$3"
	else
		_destination="$HOME/Downloads/ssh_transfer_from_${_timestamp}"
	fi

	transfer_data
}

send_data() {
	if hostname --fqdn | grep 'physik.fu-berlin.de' ; then
		# within uni network
		if [ "${_opt_box}" -eq 0 ] ; then
			printf "%s\n\n" "Specify hostname of destination."
			usage
		else
			build_remote
		fi
	else
		# remotely
		build_remote
	fi

	if [ -n "$2" ] ; then
		_source="$2"
	else
		printf "%s\n\n" "Provide a source directory."
		usage
	fi

	if [ -n "$3" ] ; then
		_destination="${_remote_basedir}/$3"
	else
		_destination="${_address}:/home/${user_name}/Downloads/ssh_transfer_from_${_timestamp}"
	fi

	transfer_data
}

transfer_data() {
	rsync -avzhP -e ssh "${_source}" "${_destination}"
	# a -> archive mode
	# v -> verbose mode
	# z -> compress file data during transfer
	# h -> human-readable format
	# P -> --partial --progress: keep partially transferred files, show progress
}

usage() { cat << USAGE
${0##*/} - A tool for moving data between boxes.
usage: ${0##*/}	[-s] [-h] [-b hostname] command
		source destination
USAGE
	exit 1
}

while getopts b:sh arg; do
	case ${arg} in
		b) _opt_box=1 && _box="${OPTARG}" ;;
		s) _scratch=1 ;;
		h) _home=1 ;;
		*) usage
	esac
done
shift $((OPTIND -1))

case $1 in
f*)
	check_input
	fetch_data "$@"
	;;
s*)
	check_input
	send_data "$@"
	;;
*)
	usage
esac
